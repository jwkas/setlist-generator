{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/song.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction CsvUploadComponent_div_129_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nfunction CsvUploadComponent_div_130_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.success, \" \");\n  }\n}\nfunction CsvUploadComponent_span_139_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 25);\n  }\n}\nexport class CsvUploadComponent {\n  constructor(songService, router) {\n    this.songService = songService;\n    this.router = router;\n    this.selectedFile = null;\n    this.uploading = false;\n    this.error = '';\n    this.success = '';\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0] ?? null;\n    // Reset messages\n    this.error = '';\n    this.success = '';\n  }\n  uploadFile() {\n    if (!this.selectedFile) {\n      this.error = 'Please select a CSV file to upload';\n      return;\n    }\n    if (!this.selectedFile.name.endsWith('.csv')) {\n      this.error = 'Only CSV files are supported';\n      return;\n    }\n    this.uploading = true;\n    this.error = '';\n    this.success = '';\n    this.songService.uploadSongs(this.selectedFile).subscribe({\n      next: response => {\n        this.uploading = false;\n        this.success = response.message || 'Songs uploaded successfully';\n        this.selectedFile = null;\n        // Reset the file input\n        const fileInput = document.getElementById('csvFile');\n        if (fileInput) {\n          fileInput.value = '';\n        }\n      },\n      error: err => {\n        this.uploading = false;\n        this.error = 'Failed to upload songs. Please check your CSV file format and try again.';\n        console.error('Error uploading songs:', err);\n      }\n    });\n  }\n  downloadSampleCsv() {\n    // Create a link to download the sample CSV\n    const link = document.createElement('a');\n    link.href = '/assets/sample_songs.csv';\n    link.download = 'sample_songs.csv';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n  navigateToSongList() {\n    this.router.navigate(['/songs']);\n  }\n  static {\n    this.ɵfac = function CsvUploadComponent_Factory(t) {\n      return new (t || CsvUploadComponent)(i0.ɵɵdirectiveInject(i1.SongService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CsvUploadComponent,\n      selectors: [[\"app-csv-upload\"]],\n      decls: 143,\n      vars: 4,\n      consts: [[1, \"row\", \"mb-4\"], [1, \"col\"], [1, \"col-auto\"], [\"routerLink\", \"/songs\", 1, \"btn\", \"btn-outline-secondary\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"card-text\"], [1, \"table-responsive\", \"mb-4\"], [1, \"table\", \"table-sm\", \"table-bordered\"], [1, \"table-light\"], [1, \"mb-3\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", 3, \"click\"], [1, \"bi\", \"bi-download\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [\"for\", \"csvFile\", 1, \"form-label\"], [\"type\", \"file\", \"id\", \"csvFile\", \"accept\", \".csv\", 1, \"form-control\", 3, \"change\"], [1, \"form-text\"], [1, \"d-grid\", \"gap-2\", \"d-md-flex\", \"justify-content-md-start\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [\"class\", \"spinner-border spinner-border-sm me-1\", \"role\", \"status\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"alert\", \"alert-danger\"], [1, \"alert\", \"alert-success\"], [\"role\", \"status\", \"aria-hidden\", \"true\", 1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n      template: function CsvUploadComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n          i0.ɵɵtext(3, \"Upload Songs\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"a\", 3);\n          i0.ɵɵtext(6, \"Back to Song List\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(7, \"div\", 4)(8, \"div\", 5);\n          i0.ɵɵtext(9, \" Bulk Upload Songs via CSV \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 6)(11, \"p\", 7);\n          i0.ɵɵtext(12, \" Upload a CSV file containing your songs. The CSV file should have the following columns: \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 8)(14, \"table\", 9)(15, \"thead\", 10)(16, \"tr\")(17, \"th\");\n          i0.ɵɵtext(18, \"Column\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"th\");\n          i0.ɵɵtext(20, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"th\");\n          i0.ɵɵtext(22, \"Required\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"th\");\n          i0.ɵɵtext(24, \"Example\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(25, \"tbody\")(26, \"tr\")(27, \"td\");\n          i0.ɵɵtext(28, \"title\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"td\");\n          i0.ɵɵtext(30, \"Song title\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(31, \"td\");\n          i0.ɵɵtext(32, \"Yes\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(33, \"td\");\n          i0.ɵɵtext(34, \"Stairway to Heaven\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(35, \"tr\")(36, \"td\");\n          i0.ɵɵtext(37, \"artist\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"td\");\n          i0.ɵɵtext(39, \"Artist name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(40, \"td\");\n          i0.ɵɵtext(41, \"Yes\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(42, \"td\");\n          i0.ɵɵtext(43, \"Led Zeppelin\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(44, \"tr\")(45, \"td\");\n          i0.ɵɵtext(46, \"tempo\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(47, \"td\");\n          i0.ɵɵtext(48, \"Tempo in BPM\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(49, \"td\");\n          i0.ɵɵtext(50, \"No\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(51, \"td\");\n          i0.ɵɵtext(52, \"75\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(53, \"tr\")(54, \"td\");\n          i0.ɵɵtext(55, \"tempo_category\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(56, \"td\");\n          i0.ɵɵtext(57, \"Tempo category (slow, medium, fast)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(58, \"td\");\n          i0.ɵɵtext(59, \"No\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(60, \"td\");\n          i0.ɵɵtext(61, \"slow\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(62, \"tr\")(63, \"td\");\n          i0.ɵɵtext(64, \"intensity\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(65, \"td\");\n          i0.ɵɵtext(66, \"Intensity level (low, medium, high)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(67, \"td\");\n          i0.ɵɵtext(68, \"No\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(69, \"td\");\n          i0.ɵɵtext(70, \"medium\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(71, \"tr\")(72, \"td\");\n          i0.ɵɵtext(73, \"lead_vocalist\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(74, \"td\");\n          i0.ɵɵtext(75, \"Lead vocalist name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(76, \"td\");\n          i0.ɵɵtext(77, \"No\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(78, \"td\");\n          i0.ɵɵtext(79, \"Robert Plant\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(80, \"tr\")(81, \"td\");\n          i0.ɵɵtext(82, \"key\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(83, \"td\");\n          i0.ɵɵtext(84, \"Musical key\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(85, \"td\");\n          i0.ɵɵtext(86, \"No\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(87, \"td\");\n          i0.ɵɵtext(88, \"A Minor\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(89, \"tr\")(90, \"td\");\n          i0.ɵɵtext(91, \"is_minor\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(92, \"td\");\n          i0.ɵɵtext(93, \"Is minor key (true/false)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(94, \"td\");\n          i0.ɵɵtext(95, \"No\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(96, \"td\");\n          i0.ɵɵtext(97, \"true\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(98, \"tr\")(99, \"td\");\n          i0.ɵɵtext(100, \"is_original\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(101, \"td\");\n          i0.ɵɵtext(102, \"Is original song (true/false)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(103, \"td\");\n          i0.ɵɵtext(104, \"No\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(105, \"td\");\n          i0.ɵɵtext(106, \"false\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(107, \"tr\")(108, \"td\");\n          i0.ɵɵtext(109, \"is_hit\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(110, \"td\");\n          i0.ɵɵtext(111, \"Is a hit song (true/false)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(112, \"td\");\n          i0.ɵɵtext(113, \"No\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(114, \"td\");\n          i0.ɵɵtext(115, \"true\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(116, \"tr\")(117, \"td\");\n          i0.ɵɵtext(118, \"duration\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(119, \"td\");\n          i0.ɵɵtext(120, \"Duration in seconds\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(121, \"td\");\n          i0.ɵɵtext(122, \"No\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(123, \"td\");\n          i0.ɵɵtext(124, \"480\");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(125, \"div\", 11)(126, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function CsvUploadComponent_Template_button_click_126_listener() {\n            return ctx.downloadSampleCsv();\n          });\n          i0.ɵɵelement(127, \"i\", 13);\n          i0.ɵɵtext(128, \" Download Sample CSV \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(129, CsvUploadComponent_div_129_Template, 2, 1, \"div\", 14);\n          i0.ɵɵtemplate(130, CsvUploadComponent_div_130_Template, 2, 1, \"div\", 15);\n          i0.ɵɵelementStart(131, \"div\", 11)(132, \"label\", 16);\n          i0.ɵɵtext(133, \"Select CSV File\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(134, \"input\", 17);\n          i0.ɵɵlistener(\"change\", function CsvUploadComponent_Template_input_change_134_listener($event) {\n            return ctx.onFileSelected($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(135, \"div\", 18);\n          i0.ɵɵtext(136, \"Only CSV files are supported.\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(137, \"div\", 19)(138, \"button\", 20);\n          i0.ɵɵlistener(\"click\", function CsvUploadComponent_Template_button_click_138_listener() {\n            return ctx.uploadFile();\n          });\n          i0.ɵɵtemplate(139, CsvUploadComponent_span_139_Template, 1, 0, \"span\", 21);\n          i0.ɵɵtext(140, \" Upload Songs \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(141, \"button\", 22);\n          i0.ɵɵlistener(\"click\", function CsvUploadComponent_Template_button_click_141_listener() {\n            return ctx.navigateToSongList();\n          });\n          i0.ɵɵtext(142, \" Cancel \");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(129);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.success);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"disabled\", !ctx.selectedFile || ctx.uploading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.uploading);\n        }\n      },\n      dependencies: [i3.NgIf, i2.RouterLink],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jc3YtdXBsb2FkL2Nzdi11cGxvYWQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0NBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBDU1YgdXBsb2FkIGNvbXBvbmVudCBzdHlsZXMgKi9cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["i0","CsvUploadComponent","constructor","songService","router","onFileSelected","event","selectedFile","target","files","error","success","uploadFile","name","endsWith","uploading","uploadSongs","subscribe","next","response","message","fileInput","document","getElementById","value","err","console","downloadSampleCsv","link","createElement","href","download","body","appendChild","click","removeChild","navigateToSongList","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\joe.kasmann\\CascadeProjects\\setlist-generator\\frontend\\src\\app\\components\\csv-upload\\csv-upload.component.html","C:\\Users\\joe.kasmann\\CascadeProjects\\setlist-generator\\frontend\\src\\app\\components\\csv-upload\\csv-upload.component.ts"],"sourcesContent":["<div class=\"row mb-4\">\n  <div class=\"col\">\n    <h2>Upload Songs</h2>\n  </div>\n  <div class=\"col-auto\">\n    <a routerLink=\"/songs\" class=\"btn btn-outline-secondary\">Back to Song List</a>\n  </div>\n</div>\n\n<div class=\"card\">\n  <div class=\"card-header\">\n    Bulk Upload Songs via CSV\n  </div>\n  <div class=\"card-body\">\n    <p class=\"card-text\">\n      Upload a CSV file containing your songs. The CSV file should have the following columns:\n    </p>\n    \n    <div class=\"table-responsive mb-4\">\n      <table class=\"table table-sm table-bordered\">\n        <thead class=\"table-light\">\n          <tr>\n            <th>Column</th>\n            <th>Description</th>\n            <th>Required</th>\n            <th>Example</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>title</td>\n            <td>Song title</td>\n            <td>Yes</td>\n            <td>Stairway to Heaven</td>\n          </tr>\n          <tr>\n            <td>artist</td>\n            <td>Artist name</td>\n            <td>Yes</td>\n            <td>Led Zeppelin</td>\n          </tr>\n          <tr>\n            <td>tempo</td>\n            <td>Tempo in BPM</td>\n            <td>No</td>\n            <td>75</td>\n          </tr>\n          <tr>\n            <td>tempo_category</td>\n            <td>Tempo category (slow, medium, fast)</td>\n            <td>No</td>\n            <td>slow</td>\n          </tr>\n          <tr>\n            <td>intensity</td>\n            <td>Intensity level (low, medium, high)</td>\n            <td>No</td>\n            <td>medium</td>\n          </tr>\n          <tr>\n            <td>lead_vocalist</td>\n            <td>Lead vocalist name</td>\n            <td>No</td>\n            <td>Robert Plant</td>\n          </tr>\n          <tr>\n            <td>key</td>\n            <td>Musical key</td>\n            <td>No</td>\n            <td>A Minor</td>\n          </tr>\n          <tr>\n            <td>is_minor</td>\n            <td>Is minor key (true/false)</td>\n            <td>No</td>\n            <td>true</td>\n          </tr>\n          <tr>\n            <td>is_original</td>\n            <td>Is original song (true/false)</td>\n            <td>No</td>\n            <td>false</td>\n          </tr>\n          <tr>\n            <td>is_hit</td>\n            <td>Is a hit song (true/false)</td>\n            <td>No</td>\n            <td>true</td>\n          </tr>\n          <tr>\n            <td>duration</td>\n            <td>Duration in seconds</td>\n            <td>No</td>\n            <td>480</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <div class=\"mb-3\">\n      <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"downloadSampleCsv()\">\n        <i class=\"bi bi-download\"></i> Download Sample CSV\n      </button>\n    </div>\n\n    <div *ngIf=\"error\" class=\"alert alert-danger\">\n      {{ error }}\n    </div>\n\n    <div *ngIf=\"success\" class=\"alert alert-success\">\n      {{ success }}\n    </div>\n\n    <div class=\"mb-3\">\n      <label for=\"csvFile\" class=\"form-label\">Select CSV File</label>\n      <input class=\"form-control\" type=\"file\" id=\"csvFile\" (change)=\"onFileSelected($event)\" accept=\".csv\">\n      <div class=\"form-text\">Only CSV files are supported.</div>\n    </div>\n\n    <div class=\"d-grid gap-2 d-md-flex justify-content-md-start\">\n      <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"!selectedFile || uploading\" (click)=\"uploadFile()\">\n        <span *ngIf=\"uploading\" class=\"spinner-border spinner-border-sm me-1\" role=\"status\" aria-hidden=\"true\"></span>\n        Upload Songs\n      </button>\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"navigateToSongList()\">\n        Cancel\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SongService } from '../../services/song.service';\n\n@Component({\n  selector: 'app-csv-upload',\n  templateUrl: './csv-upload.component.html',\n  styleUrls: ['./csv-upload.component.scss']\n})\nexport class CsvUploadComponent {\n  selectedFile: File | null = null;\n  uploading = false;\n  error = '';\n  success = '';\n  \n  constructor(\n    private songService: SongService,\n    private router: Router\n  ) { }\n\n  onFileSelected(event: any): void {\n    this.selectedFile = event.target.files[0] ?? null;\n    \n    // Reset messages\n    this.error = '';\n    this.success = '';\n  }\n\n  uploadFile(): void {\n    if (!this.selectedFile) {\n      this.error = 'Please select a CSV file to upload';\n      return;\n    }\n\n    if (!this.selectedFile.name.endsWith('.csv')) {\n      this.error = 'Only CSV files are supported';\n      return;\n    }\n\n    this.uploading = true;\n    this.error = '';\n    this.success = '';\n\n    this.songService.uploadSongs(this.selectedFile).subscribe({\n      next: (response) => {\n        this.uploading = false;\n        this.success = response.message || 'Songs uploaded successfully';\n        this.selectedFile = null;\n        \n        // Reset the file input\n        const fileInput = document.getElementById('csvFile') as HTMLInputElement;\n        if (fileInput) {\n          fileInput.value = '';\n        }\n      },\n      error: (err) => {\n        this.uploading = false;\n        this.error = 'Failed to upload songs. Please check your CSV file format and try again.';\n        console.error('Error uploading songs:', err);\n      }\n    });\n  }\n\n  downloadSampleCsv(): void {\n    // Create a link to download the sample CSV\n    const link = document.createElement('a');\n    link.href = '/assets/sample_songs.csv';\n    link.download = 'sample_songs.csv';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  navigateToSongList(): void {\n    this.router.navigate(['/songs']);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}