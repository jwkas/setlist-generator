{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SetlistService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/api';\n  }\n  // Get all setlists\n  getSetlists() {\n    return this.http.get(`${this.apiUrl}/setlists`);\n  }\n  // Get a single setlist by ID\n  getSetlist(id) {\n    return this.http.get(`${this.apiUrl}/setlists/${id}`);\n  }\n  // Create a new setlist manually\n  createSetlist(setlist) {\n    return this.http.post(`${this.apiUrl}/setlists`, setlist);\n  }\n  // Delete a setlist\n  deleteSetlist(id) {\n    return this.http.delete(`${this.apiUrl}/setlists/${id}`);\n  }\n  // Generate a setlist based on parameters\n  generateSetlist(params) {\n    return this.http.post(`${this.apiUrl}/generate-setlist`, params);\n  }\n  static {\n    this.ɵfac = function SetlistService_Factory(t) {\n      return new (t || SetlistService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SetlistService,\n      factory: SetlistService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";;AAeA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,2BAA2B;EAEJ;EAExC;EACAC,WAAW;IACT,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,GAAG,IAAI,CAACC,MAAM,WAAW,CAAC;EAC5D;EAEA;EACAC,UAAU,CAACC,EAAU;IACnB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAU,GAAG,IAAI,CAACC,MAAM,aAAaE,EAAE,EAAE,CAAC;EAChE;EAEA;EACAC,aAAa,CAACC,OAAgB;IAC5B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAU,GAAG,IAAI,CAACL,MAAM,WAAW,EAAEI,OAAO,CAAC;EACpE;EAEA;EACAE,aAAa,CAACJ,EAAU;IACtB,OAAO,IAAI,CAACL,IAAI,CAACU,MAAM,CAAC,GAAG,IAAI,CAACP,MAAM,aAAaE,EAAE,EAAE,CAAC;EAC1D;EAEA;EACAM,eAAe,CAACC,MAA+B;IAC7C,OAAO,IAAI,CAACZ,IAAI,CAACQ,IAAI,CAAU,GAAG,IAAI,CAACL,MAAM,mBAAmB,EAAES,MAAM,CAAC;EAC3E;;;uBA5BWd,cAAc;IAAA;EAAA;;;aAAdA,cAAc;MAAAe,SAAdf,cAAc;MAAAgB,YAFb;IAAM;EAAA","names":["SetlistService","constructor","http","getSetlists","get","apiUrl","getSetlist","id","createSetlist","setlist","post","deleteSetlist","delete","generateSetlist","params","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\joe.kasmann\\CascadeProjects\\setlist-generator\\frontend\\src\\app\\services\\setlist.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Setlist } from '../models/setlist.model';\n\ninterface SetlistGenerationParams {\n  target_duration?: number;\n  name?: string;\n  date?: string;\n  venue?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SetlistService {\n  private apiUrl = 'http://localhost:5000/api';\n\n  constructor(private http: HttpClient) { }\n\n  // Get all setlists\n  getSetlists(): Observable<Setlist[]> {\n    return this.http.get<Setlist[]>(`${this.apiUrl}/setlists`);\n  }\n\n  // Get a single setlist by ID\n  getSetlist(id: number): Observable<Setlist> {\n    return this.http.get<Setlist>(`${this.apiUrl}/setlists/${id}`);\n  }\n\n  // Create a new setlist manually\n  createSetlist(setlist: Setlist): Observable<Setlist> {\n    return this.http.post<Setlist>(`${this.apiUrl}/setlists`, setlist);\n  }\n\n  // Delete a setlist\n  deleteSetlist(id: number): Observable<any> {\n    return this.http.delete(`${this.apiUrl}/setlists/${id}`);\n  }\n\n  // Generate a setlist based on parameters\n  generateSetlist(params: SetlistGenerationParams): Observable<Setlist> {\n    return this.http.post<Setlist>(`${this.apiUrl}/generate-setlist`, params);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}